Tarea de conceptos básicos de Angular
hero-page.component.html
<h1>{{ name() }}</h1>

<dl>
  <td>Nombre:</td>
  <dd>{{ name() }}</dd>

  <td>Edad:</td>
  <dd>{{ age() }}</dd>

  <td>Método:</td>
  <dd>{{ getHeroDescription() }}</dd>

  <td>Capitalizado:</td>
  <!-- ! Intentar  -->
  <!-- <dd> {{ 'Mostrar nombre TODO EN MAYÚSCULAS' }} </dd> -->
</dl>

<button (click)="changeHero()" class="btn btn-primary mx-2">
  Cambiar nombre
</button>

<button class="btn btn-primary">Cambiar edad</button>

<button (click)="resetForm()" class="btn btn-primary mx-2">Reset</button>
_________________________________________________________________________________________________________________________________________________________________________
tarea-01.md
Tarea:
Practicar lo aprendido hasta el momento

Colocar esta importación del Bootstrap en el index.html
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
Crear el componente de Angular correspondiente para este archivo: src/app/pages/hero/hero-page.component.html
El contenido del HTML está en este GIST también
Crear la ruta respectiva en el app.routes.ts
  {
    path: '/hero',
    component: HeroPageComponent
  }
* Recuerden importar el componente en el app.routes.ts
* Navegar al URL: https://localhost:4200/hero
Crear dos señales con los valores de Ironman y 45 respectivamente.
  name => string  = 'Ironman'
  age => number = 45
Crear un método llamado: getHeroDescription Debe de regresar la concatenación del nombre y la edad.
getHeroDescription
  return `${ name } - ${ age }`;
Implementar el método changeHero, no recibe argumentos y lo cambia a:
name = Spiderman
age = 22
Implementar el método: resetForm, el cual establece
name = Ironman 
age = 45
Implementar el método: chageAge, asignalor al evento click del botón respectivo.
cambia la edad a 60
Extra: Tratar de mostrar el nombre (name) capitalizado en mayúscula sin crear una nueva señal.
___________________________________________________________________________________________________________________________________
TS
import { Component, computed, signal } from '@angular/core';
import { UpperCasePipe } from '@angular/common';

@Component({
  templateUrl: './hero-page.component.html',
  imports: [UpperCasePipe],
})
export class HeroPageComponent {
[x: string]: any;
  name = signal('Ironman');
  age = signal(45);

  heroDescription = computed(() => {
    const description = `${this.name()} - ${this.age()}`;
    return description;
  });

  capitalizedName = computed(() => this.name().toUpperCase());

  changeHero() {
    this.name.set('Spiderman');
    this.age.set(22);
  }

  changeAge() {
    this.age.set(60);
  }

  resetForm() {
    this.name.set('Ironman');
    this.age.set(45);
  }
}
____________________________________________________________________________________________________________________

html

<h1>{{ name() }}</h1>
<dl>
  <td>Nombre:</td>
  <dd>{{ name() }}</dd>

  <td>Edad:</td>
  <dd>{{ age() }}</dd>

  <td>Método:</td>
  <dd>{{ heroDescription() }}</dd>

  <td>Capitalizado:</td>
  <!-- <dd>{{ capitalizedName() }}</dd> -->
  <dd>{{ name() | uppercase }}</dd>
</dl>
<button (click)="changeHero()" class="btn btn-primary mx-2">
  Cambiar nombre
</button>
<button (click)="changeAge()" class="btn btn-primary">Cambiar edad</button>
<button (click)="resetForm()" class="btn btn-primary mx-2">Reset</button>
_______________________________________________________________________________________________________________________________
route

import { Routes } from '@angular/router';
import { CounterComponent } from './pages/counter/counter.component';
import { HeroPageComponent } from './pages/hero/hero-page.component';


export const routes: Routes = [

{
  path: '',
  component: CounterComponent

},
{
    path: 'hero',
    component: HeroPageComponent,
  },




];





